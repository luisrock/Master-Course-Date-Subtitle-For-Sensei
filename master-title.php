<?php
	/*
	* Plugin Name: Master Course Date Subtitle (for Sensei)
	* Version: 1.0.0
 	* Plugin URI: http://www.luisrock.com/
 	* Description: Add "Updated in [date]" as a Sensei course subtitle, whenever a lesson is published.
 	* Author: Luis Rock
	*/
	
if ( ! defined( 'ABSPATH' ) ) exit;
		
// Conferindo se o Sensei está ativo. Se não estiver, desativar...
include_once( ABSPATH . 'wp-admin/includes/plugin.php' );
if( !is_plugin_active('woothemes-sensei/woothemes-sensei.php' ) ) {
	// Ao menos um dos dois está inativo
	add_action( 'admin_init', 'mct_deactivate' );
	add_action( 'admin_notices', 'mct_admin_notice' );

	// Desativando o plugin (só funciona com o S2 e com o Sensei)
	function mct_deactivate() {
		deactivate_plugins( plugin_basename( __FILE__ ) );
	}
	
	// Informando
	function mct_admin_notice() {
		echo '<div class="updated"><p><strong>Sensei</strong> não está ativo: <strong>Master Course Title</strong> necessita dele, por isso foi  <strong>desativado</strong>.</p></div>';
		if ( isset( $_GET['activate'] ) ) {
			unset( $_GET['activate'] ); 
		}        
	}
}
//Options file
require_once('mct-options.php');

//css
function mctStyle() {
	wp_register_style( 'mct-style', plugins_url( '/css/mct-style.css', __FILE__ ) );
	wp_enqueue_style( 'mct-style' );
}
add_action( 'wp_enqueue_scripts', 'mctStyle' );

//js
function mctAdminScript($hook) {
	global $mct_settings_page;
	
	if( $hook != $mct_settings_page ) {
		return;
	}
	
	wp_enqueue_script( 'vue', plugins_url( '/js/vue.js', __FILE__ ) );
}
add_action( 'admin_enqueue_scripts', 'mctAdminScript' );


//Settings (Admin options)
if ( is_admin() )
	$master_course_title_for_sensei = new MasterCourseTitleForSensei();

/* 
 * Retrieve this value with:
 * $master_course_title_for_sensei_options = get_option( 'master_course_title_for_sensei_option_name' ); // Array of All Options
 * $sentence_before_date_0 = $master_course_title_for_sensei_options['sentence_before_date_0']; // Sentence before date:
 * $date_links_to_the_last_lesson_published_1 = $master_course_title_for_sensei_options['date_links_to_the_last_lesson_published_1']; // Date links to the last lesson published?
 * $update_course_subtitle_2 = $master_course_title_for_sensei_options['update_course_subtitle_2']; // Update course subtitle: 
 */



//Metabox para Course CPT
/**
 * Generated by the WordPress Meta Box generator
 * at http://jeremyhixon.com/tool/wordpress-meta-box-generator/
 */

function master_data_get_meta( $value ) {
	global $post;

	$field = get_post_meta( $post->ID, $value, true );
	if ( ! empty( $field ) ) {
		return is_array( $field ) ? stripslashes_deep( $field ) : stripslashes( wp_kses_decode_entities( $field ) );
	} else {
		return false;
	}
}

function master_data_add_meta_box() {
	add_meta_box(
		'master_data-master-data',
		__( 'Master Data', 'master_data' ),
		'master_data_html',
		'course',
		'side',
		'default'
	);
}
add_action( 'add_meta_boxes', 'master_data_add_meta_box' );


	
/**
* Generated by the WordPress Meta Box generator
* at http://jeremyhixon.com/tool/wordpress-meta-box-generator/
*/

function mct_get_meta( $value ) {
	global $post;

	$field = get_post_meta( $post->ID, $value, true );
	if ( ! empty( $field ) ) {
		return is_array( $field ) ? stripslashes_deep( $field ) : stripslashes( wp_kses_decode_entities( $field ) );
	} else {
		return false;
	}
}

function mct_add_meta_box() {
	add_meta_box(
		'master_data-master-data',
		__( 'Master Data', 'master_data' ),
		'mct_html',
		'course',
		'side',
		'default'
	);
}
add_action( 'add_meta_boxes', 'mct_add_meta_box' );

function mct_html( $post) {
	wp_nonce_field( '_master_data_nonce', 'master_data_nonce' ); ?>

	<p><?php _e( 'Show the last lesson updated date as a subtitle', 'master_data' ); ?></p>

	<p>
	<label for="master_data_atualizado_em_"><?php _e( 'Updated in:', 'master_data' ); ?></label><br>
	<input type="text" name="master_data_atualizado_em_" id="master_data_atualizado_em_" value="<?php echo master_data_get_meta( 'master_data_atualizado_em_' ); ?>">
	</p>	
	
	<p>
	<label for="master_data_link_da_aula_"><?php _e( 'Lesson Link:', 'master_data' ); ?></label><br>
	<input type="text" name="master_data_link_da_aula_" id="master_data_link_da_aula_" value="<?php echo master_data_get_meta( 'master_data_link_da_aula_' ); ?>">
	</p>	<p>

	<input type="checkbox" name="master_data_mostrar_" id="master_data_mostrar_" value="show" <?php echo ( master_data_get_meta( 'master_data_mostrar_' ) === 'show' ) ? 'checked' : ''; ?>>
	<label for="master_data_mostrar_"><?php _e( 'Show', 'master_data' ); ?></label>	</p><?php
}

function mct_save( $post_id ) {
	if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) return;
	if ( ! isset( $_POST['master_data_nonce'] ) || ! wp_verify_nonce( $_POST['master_data_nonce'], '_master_data_nonce' ) ) return;
	if ( ! current_user_can( 'edit_post', $post_id ) ) return;

	if ( isset( $_POST['master_data_atualizado_em_'] ) )
		update_post_meta( $post_id, 'master_data_atualizado_em_', esc_attr( $_POST['master_data_atualizado_em_'] ) );
	if ( isset( $_POST['master_data_link_da_aula_'] ) )
		update_post_meta( $post_id, 'master_data_link_da_aula_', esc_attr( $_POST['master_data_link_da_aula_'] ) );
	if ( isset( $_POST['master_data_mostrar_'] ) )
		update_post_meta( $post_id, 'master_data_mostrar_', esc_attr( $_POST['master_data_mostrar_'] ) );
	else
		update_post_meta( $post_id, 'master_data_mostrar_', null );
}
add_action( 'save_post', 'mct_save' );

	/*
		Usage: mct_get_meta( 'master_data_atualizado_em_' )
		Usage: mct_get_meta( 'master_data_link_da_aula_' )
		Usage: mct_get_meta( 'master_data_mostrar_' )
	*/

	
	
//Filtrando o título do curso...
function mct_filter_course_title( $title, $id ) {		
	
	//checking if it is a Course CPT	
	if('course' == get_post_type($id)) {
		
		//relevant options from the plugin general settings
		$master_course_title_for_sensei_options = get_option( 'master_course_title_for_sensei_option_name' ); // Array of All Options
	 	$text_before = trim($master_course_title_for_sensei_options['sentence_before_date_0']); // Sentence before date:
		$date_link_lesson = $master_course_title_for_sensei_options['date_links_to_the_last_lesson_published_1']; // Date links to the last lesson published?
		
		if( !$text_before ) {
			$text_before = __( 'Updated on', 'master_data' );
		}
		
		//grabbing desired values from course meta
		$course_meta = get_post_meta( $id );
		$data = $course_meta["master_data_atualizado_em_"][0];
		$link = $course_meta["master_data_link_da_aula_"][0];
		$show = $course_meta["master_data_mostrar_"][0];
		
		//not interested in show? Abort mission...
		if( $show != 'show' ) {
			return $title;
		}
		
		//verifying if meta is true and has a value
		if( $data && '' != $data ) {
			if( !$link || '' == $link || $date_link_lesson == 'never' ) {
			$text = "<p class='mct-title'>$text_before " . "$data</p>"; 
			} else {
			$text = "<p class='mct-title'>$text_before " . "<a href='$link'>$data</a></p>";
			}
		 	return $title . $text;
		} else {
			//está em branco o metabox da data: não filtrar o título
			return $title;
		} 
	} else {
		//não é um Course CPT: não filtrar o título
		return $title; 
	} 
}
//O filtro só será adicionado se não estivermos no backend
if( !is_admin() ){
	add_filter( 'the_title', 'mct_filter_course_title', 10, 2 );
}




function mct_lesson_published( $new_status, $old_status, $post ) {
	
	//if it is not a Lesson CPT, abort...
	if ( 'lesson' != get_post_type($post) ) {
		return;
	}
	
	//relevant options from the plugin general settings
	$master_course_title_for_sensei_options = get_option( 'master_course_title_for_sensei_option_name' ); // Array of All Options
	$when_to_update = $master_course_title_for_sensei_options['update_course_subtitle_2'];
	
	//checking is a lesson is published
	if ( $new_status == 'publish' ) {
		$lesson_meta = get_post_meta( $post->ID );
		$course_id = $lesson_meta["_lesson_course"][0];
		//$date = date(get_option('date_format'));
		$date = date('d/m/Y'); 
		$link = get_permalink($post);
		
		//it is published after updated or in the first place?
		if( $when_to_update == 'updated' || $when_to_update == 'published' && $old_status != 'publish' ) {
			
			update_post_meta($course_id, 'master_data_atualizado_em_', $date);
			update_post_meta($course_id, 'master_data_link_da_aula_', $link);
			update_post_meta($course_id, 'master_data_mostrar_', 'show');
		} 
	}
}
add_action( 'transition_post_status', 'mct_lesson_published', 10, 3 );


//var_dump(get_option( 'master_course_title_for_sensei_option_name' )); exit;

/*



*/

